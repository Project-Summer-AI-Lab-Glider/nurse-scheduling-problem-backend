@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include icons/react.puml
!include icons/nodejs.puml

Person(user, "User", "A person responsible for foundation management.")

System_Boundary(nspContainer, "Nurse Scheduling System"){
    Container(spa, "Single Page Application", "Typescript, React, Cypress", "Provides all functionalities to users via web browsers.", $sprite="react")
    Container(auth, "Auth gateway", "Node, Typescript, Express?, Jest", "Ensures that user has permissions to access services", $sprite="nodejs_small")
    Container(keyStorage, "Key Storage", "Node, Typescript, Express?, Jest", "Stores keys used to encrypt/decrypt users data", $sprite="nodejs_small")
    Container(solver, "Solver", "Julia, Genie", "Serves logic related to finding legal issues in work schedule and correcting them")
    Container(backend, "Backend", "Node, Typescript, Express?, Jest", "Provides Database API", $sprite="nodejs_small")
    ContainerDb(db, "Database", "CouchDb?", "Stores encrypted users data", $sprite="mongo")
}

System_Ext(sentry, "Sentry", "Application Monitoring and Error Tracking Software")
System_Ext(netlify, "Netlify", "Deployment platform")
System_Ext(emailJs, "Email JS", "Email provider")


Rel(user, spa, "uses")
Rel_D(spa, sentry, "sends error logs")
Rel_R(spa, netlify, "is deployed on")
Rel_L(spa, emailJs, "sends email")

Rel_D(spa, auth, "sends requests", "Http/Json")

Rel_D(auth, keyStorage, "gets encryption key", "Http/Json")
Rel_D(auth, backend, "read/write to db", "Http/Json")
Rel_D(auth, solver, "gets schedule errors, corrects schedule", "Http/Json")

Rel_D(backend, db, "reads and writes from/to DB", "JDBC")
@enduml